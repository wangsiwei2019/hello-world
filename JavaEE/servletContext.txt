package com.wang;

import java.io.IOException;
import java.io.InputStream;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * servletcontext对象的学习：
 * 问题：
 *    不同的用户使用相同的数据
 * 解决：
 *    servletcontext对象
 * 特点：
 *     服务器创建
 *     用户共享
 * 作用域：
 *     整个项目
 * 生命周期：
 *      服务器的启动到关闭
 * 使用：
 *    获取servletcontext的对象
 *    使用servletcontext对象完成数据共享
 *      //获取servletcontext对象
		   //第一种方式
		   ServletContext sc=this.getServletContext();
		   //第二种方式
		  ServletContext sc2=this.getServletConfig().getServletContext();
		  //第三种方式
		  ServletContext sc3=arg0.getSession().getServletContext();
	   //使用servletcontext完成数据共享
		  //数据存储
		  sc.setAttribute("str", "servletcontext学习");
		  //数据获取
		  sc.getAttribute("str");
		  注意：
		    不同的用户可以给servletcontext对象进行数据的存取
		    获取的数据不存在返回null
   获取项目中web.xml文件中的全局配置数据
       sc.getInitParameter("name");根据键的名字返回所对应的值，string类型
       sc.getInitParameterNames(); 返回键名的枚举
       配置方式
       <context-param>
      <param-name>wangsiwei</param-name>
     <param-value>751612751612</param-value>
      </context-param>
	 注意：标签只能存储一组键值对数据，多组可以声明多个  <context-param>
	  </context-param>进行存储   
 作用：
   将静态数据和代码进行解耦
   获取项目webcontent下的资源绝对路径
        String path=sc.getRealPath( String path);
		  System.out.println(path);
		获取的路径为项目根目录，path参数为项目根目录的路径
  获取webcontent下的资源的流对象
        InputStream is=sc.getResourceAsStream("/doc/1.txt");
        注意：
        此种方式只能获取项目根目录下的资源流对象，class文件的流对象需要类加载器
          path参数为项目根目录的路径
  
 
 *      
 * 
 */
public class servletcontext extends HttpServlet {
	@Override
	protected void service(HttpServletRequest arg0, HttpServletResponse arg1) throws ServletException, IOException {
	
		//获取servletcontext对象
		   //第一种方式
		   ServletContext sc=this.getServletContext();
		   //第二种方式
		  ServletContext sc2=this.getServletConfig().getServletContext();
		  //第三种方式
		  ServletContext sc3=arg0.getSession().getServletContext();
	   //使用servletcontext完成数据共享
		  //数据存储
		  sc.setAttribute("str", "servletcontext学习");
	  //获取项目的web.xml的全局配置文件
		  String name=sc.getInitParameter("wangsiwei");
		  System.out.println("全局配置参数"+name);
		  arg1.getWriter().write(name);
	 //获取项目根目录下的资源的绝对路径
		  String path=sc.getRealPath("/doc/1.txt");
		  System.out.println(path);
     //获取项目根目录下的资源的流对象
		  InputStream is=sc.getResourceAsStream("/doc/1.txt");
		  
		  
		   
		 
	}
}

    